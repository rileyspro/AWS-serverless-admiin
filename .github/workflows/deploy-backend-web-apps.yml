# Derived from:
# nx - lint, test and build - https://nx.dev/recipes/ci/monorepo-ci-github-actions
# SHAs - https://github.com/nrwl/nx-set-shas
# publishing - https://lerna.js.org/docs/features/version-and-publish
name: Build and deploy backend and web applications
on:
  push:
    branches:
      - feature/cicd
  pull_request:
    branches:
      - feature/cicd

env:
  NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}} # token generated by setup-node@v3 & used by project .npmrc files
  # BEFORE_SHA: ${{ github.event.before }} #TODO: check if required for affected, otherwise remove from here and below

jobs:
  build-deploy-cdk:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          registry-url: https://npm.pkg.github.com/
          scope: "@admiin-com"
          always-auth: true
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        id: setSHAs
        uses: nrwl/nx-set-shas@v3 #TODO review purpose
      - run: |
          echo "BASE: ${{ steps.setSHAs.outputs.base }}"
          echo "HEAD: ${{ steps.setSHAs.outputs.head }}"
      - name: Set yarn version
        run: yarn set version berry
      - name: Install dependencies
        run: yarn install --immutable # yarn --version && yarn set version latest && yarn --version && yarn
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        # - name: Checks for unformatted files
        #run: yarn nx format:check --all
        #- name: Check files formatted
        #run: yarn nx affected -t lint --parallel=3 #-- --base=$BEFORE_SHA
        #- name: Run automated tests
        #run: yarn nx affected -t test --parallel=3 --configuration=ci
      - name: Install lambda layer dependencies
        run: cd apps/backend/src/layers/dependencyLayer/nodejs && yarn install --immutable # yarn --version && yarn set version latest && yarn --version && yarn
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: "us-east-1"
      - name: Deploy to AWS using CDK
        run: yarn nx deploy backend --all --require-approval=never
        env:
          AWS_DEFAULT_REGION: us-east-1 # or different region
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      - name: Run codegen
        run: yarn codegen

      - name: Build packages
        run: yarn nx affected -t build --parallel=3
